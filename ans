Kubernetes Architecture



etcd

Kubernetes uses etcd as a distributed key-value store for all of its data, 
including metadata and configuration data, and allows nodes in Kubernetes clusters to read and write data. 

apiserver
controll manager
scheduler


kubelet

The kubelet is a service agent that controls and maintains a set of pods by watching for pod specs through the Kubernetes API server. 
It preserves the pod lifecycle by ensuring that a given set of containers are all running as they should. 
The kubelet runs on each node and enables the communication between the master and slave nodes.

kubeproxy

Kube-proxy is an implementation of a load balancer and network proxy used to support service abstraction with other networking operations. 
Kube-proxy is responsible for directing traffic to the right container based on IP and the port number of incoming requests.

container runtime





###########################################################################################################################
Namespace

Namespaces are used for dividing cluster resources between multiple users.
They are meant for environments where there are many users spread across projects or teams and provide a scope of resources.

Daemon set:

Daemon set is a set of pods that runs only once on a host.
They are used for host layer attributes like a network or for monitoring a network, which you may not need to run on a host more than once.

Different services in kubernetes

  Cluster IP service
  Node Port service
  External Name Creation service and 
  Load Balancer service
  
  
ClusterIP
  The ClusterIP is the default Kubernetes service that provides a service inside a cluster (with no external access) that other apps inside your cluster can access. 
  
NodePort
  The NodePort service is the most fundamental way to get external traffic directly to your service. 
  It opens a specific port on all Nodes and forwards any traffic sent to this port to the service.
  
LoadBalancer
  The LoadBalancer service is used to expose services to the internet.
  A Network load balancer, for example, creates a single IP address that forwards all traffic to your service. 
  
 Ingress Network
 
  An ingress is an object that allows users to access your Kubernetes services from outside the Kubernetes cluster. 
  Users can configure the access by creating rules that define which inbound connections reach which services.
  
 
 
$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$
Kubernetes Deployment Strategies
Kubernetes supports multiple rollout strategies for pod deployments. These include:

Recreate: Simultaneously terminates and replaces all pods running the old version of the application with new pods.
Ramped: Rolls out new application versions while terminating the old pods.
Rolling update: Replaces old pods with new ones, one-by-one, with zero downtime.
Canary deployment: Replaces a subset of existing pods with new ones, keeping both versions running, and then rolls out the new version to more pods if the test deployment is a success.
  
  
  
